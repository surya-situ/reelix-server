// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                            String        @id @default(uuid()) @db.Uuid
  name                          String        @db.VarChar(120)
  email                         String        @unique
  password                      String
  is_verified                   Boolean       @default(false)
  otp                           String?
  otp_expire_at                 DateTime?
  password_reset_otp            String?
  reset_otp_expire_at           DateTime?
  created_at                    DateTime      @default(now())
  updated_at                    DateTime      @updatedAt
  battle                        Battle[]
}

model Battle {
  id                            String        @id @default(uuid()) @db.Uuid
  user                          User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id                       String        @db.Uuid
  title                         String
  description                   String?
  videos                        String
  created_at                    DateTime      @default(now())
  expire_at                     DateTime
  battleItem                    BattleItem[]
}

model BattleItem {
  id                            String        @id @default(uuid()) @db.Uuid
  battle                        Battle        @relation(fields: [battle_id], references: [id], onDelete: Cascade)
  battle_id                     String        @db.Uuid
  video                         String  
  count                         Int           @default(0)
  created_at                    DateTime      @default(now())
}